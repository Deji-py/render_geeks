# Generated by Django 5.0.6 on 2024-07-10 13:46

import django.core.validators
import django.db.models.deletion
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('image', models.ImageField(blank=True, null=True, upload_to='category_images/', validators=[django.core.validators.FileExtensionValidator(['jpg', 'jpeg', 'png'])])),
            ],
            options={
                'ordering': ['id', 'name'],
            },
        ),
        migrations.CreateModel(
            name='PopularSearch',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('image', models.ImageField(blank=True, null=True, upload_to='category_images/', validators=[django.core.validators.FileExtensionValidator(['jpg', 'jpeg', 'png'])])),
            ],
            options={
                'ordering': ['id', 'name'],
            },
        ),
        migrations.CreateModel(
            name='Subscription',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('email', models.EmailField(max_length=254, unique=True)),
                ('subscribed_at', models.DateTimeField(auto_now_add=True)),
                ('is_subscribed', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Suggestion',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.JSONField()),
            ],
            options={
                'ordering': ['id', 'text'],
            },
        ),
        migrations.CreateModel(
            name='CombinedTool',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('status', models.CharField(choices=[('draft', 'Draft'), ('publish', 'Publish')], default='draft', max_length=10)),
                ('created_by', models.CharField(choices=[('user', 'User'), ('premium_user', 'premium_user')], default='user', editable=False, max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='BestTool',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('description', models.TextField()),
                ('image', models.ImageField(blank=True, null=True, upload_to='category_images/', validators=[django.core.validators.FileExtensionValidator(['jpg', 'jpeg', 'png'])])),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='geeks_tools.category')),
                ('combined_tool', models.ManyToManyField(to='geeks_tools.combinedtool')),
            ],
        ),
        migrations.CreateModel(
            name='CsvTool',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.TextField(blank=True, null=True)),
                ('url', models.URLField(unique=True)),
                ('category', models.CharField(blank=True, max_length=100, null=True)),
                ('subcategory', models.CharField(max_length=100)),
                ('hashtag', models.JSONField(blank=True, null=True)),
                ('intro', models.TextField(blank=True, null=True)),
                ('pricing', models.CharField(max_length=100)),
                ('logo', models.TextField(blank=True, null=True)),
                ('image1', models.TextField(blank=True, null=True)),
                ('created_by', models.CharField(default='csv', editable=False, max_length=100)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.CreateModel(
            name='SetUp',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('package_name', models.CharField(max_length=30)),
                ('features', models.JSONField()),
                ('Pricing', models.CharField(max_length=20)),
                ('timeline', models.CharField(choices=[('Monthly', 'Monthly'), ('Yearly', 'Yearly'), ('Annually', 'Annually')], max_length=10)),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='combinedtool',
            name='setup',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='geeks_tools.setup'),
        ),
        migrations.CreateModel(
            name='Subcategory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='geeks_tools.category')),
            ],
            options={
                'ordering': ['name'],
            },
        ),
        migrations.CreateModel(
            name='Hashtag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('term', models.CharField(max_length=100)),
                ('subcategories', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='geeks_tools.subcategory')),
            ],
            options={
                'ordering': ['term'],
            },
        ),
        migrations.CreateModel(
            name='ToolInfo',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField()),
                ('image1', models.ImageField(blank=True, null=True, upload_to='tool_info/', validators=[django.core.validators.FileExtensionValidator(['jpg', 'jpeg', 'png'])])),
                ('image2', models.ImageField(blank=True, null=True, upload_to='tool_info/', validators=[django.core.validators.FileExtensionValidator(['jpg', 'jpeg', 'png'])])),
                ('image3', models.ImageField(blank=True, null=True, upload_to='tool_info/', validators=[django.core.validators.FileExtensionValidator(['jpg', 'jpeg', 'png'])])),
                ('agent', models.JSONField()),
                ('video', models.URLField(blank=True, null=True)),
                ('features', models.JSONField()),
                ('links', models.JSONField()),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.AddField(
            model_name='combinedtool',
            name='tool_info',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='geeks_tools.toolinfo'),
        ),
        migrations.CreateModel(
            name='User_tool',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=100)),
                ('logo', models.ImageField(blank=True, null=True, upload_to='logos/', validators=[django.core.validators.FileExtensionValidator(['jpg', 'jpeg', 'png'])])),
                ('url', models.URLField(unique=True)),
                ('intro', models.CharField(max_length=70)),
                ('pricing', models.CharField(choices=[('Free', 'Free'), ('Freemium', 'Freemium'), ('Premium', 'Premium')], max_length=10)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='user_tools', to='geeks_tools.category')),
                ('hashtag', models.ManyToManyField(related_name='user_tools', to='geeks_tools.hashtag')),
                ('subcategory', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='geeks_tools.subcategory')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
            options={
                'ordering': ['-created_at'],
            },
        ),
        migrations.AddField(
            model_name='combinedtool',
            name='user_tool',
            field=models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='geeks_tools.user_tool'),
        ),
        migrations.CreateModel(
            name='Bookmark',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bookmarks', to=settings.AUTH_USER_MODEL)),
                ('combined_tool', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='bookmarked_by', to='geeks_tools.combinedtool')),
                ('csv_tool', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='bookmarked_by', to='geeks_tools.csvtool')),
            ],
            options={
                'ordering': ['-created_at'],
                'unique_together': {('user', 'combined_tool'), ('user', 'csv_tool')},
            },
        ),
    ]
